/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {

        if(head == null || head.next == null){
            return null ;
        }

        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode mainPtr = dummy;
        ListNode refPtr = dummy;
        
        int count = 0;
        
        while( count <= n ){
            refPtr = refPtr.next;
            count++;
        }
        while(refPtr != null ){ 
        refPtr = refPtr.next;
        mainPtr = mainPtr.next;
        }
        mainPtr.next = mainPtr.next.next;

        return dummy.next;
    }
}
