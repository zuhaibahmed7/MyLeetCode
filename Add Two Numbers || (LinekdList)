class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode lst1 = helperFunction(l1);
        ListNode lst2 = helperFunction(l2);

        ListNode dummy = new ListNode(0);
        ListNode temp = dummy;
        int carry = 0;

        while(lst1 != null || lst2 != null || carry != 0){
            int x = (lst1 == null) ? 0 : lst1.val;
            int y = (lst2 == null) ? 0 : lst2.val;

            int sum = x + y + carry;
            carry = sum / 10;
            int digit = sum % 10;

            temp.next = new ListNode(digit);
            temp = temp.next;

            if(lst1 != null) lst1 = lst1.next;
            if(lst2 != null) lst2 = lst2.next;
        }
        return helperFunction(dummy.next);
    }

    public ListNode helperFunction(ListNode head){
        ListNode prev = null;
        ListNode current = head;
        while(current != null){
            ListNode next = current.next;
            current.next = prev; 
            prev = current;
            current = next;  
        }
        return prev;
    }
}
