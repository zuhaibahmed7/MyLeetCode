/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head == null || head.next == null || k == 0){return head;}
        ListNode temp = head;
        int len = 0;
        while(temp!=null)
        {   temp = temp.next;
            len++; }
       if(k>len){
        k = k%len;
       }
       if(k==0 || k==len){
        return head;
       }
       int pos = len - k;
       int count = 0;
       temp = head;
       while(temp!=null && count<pos-1){
        temp = temp.next;
        count++;
       }
       ListNode lastList = temp.next;
       ListNode temp2 = lastList;
       if(temp!=null){ 
       temp.next = null;
       while(temp2!=null && temp2.next!=null){
          temp2 = temp2.next;
       }
    }
    temp2.next = head;
    head = temp2;
    return lastList;
  }
}
